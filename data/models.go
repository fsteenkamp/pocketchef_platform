// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package data

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type Account struct {
	ID                   string           `json:"id"`
	Email                string           `json:"email"`
	Verified             bool             `json:"verified"`
	VerifyCodeHash       pgtype.Text      `json:"verify_code_hash"`
	ProfileConfigured    bool             `json:"profile_configured"`
	PhoneNumber          pgtype.Text      `json:"phone_number"`
	IsAdmin              bool             `json:"is_admin"`
	IsRoot               bool             `json:"is_root"`
	CreatedAt            pgtype.Timestamp `json:"created_at"`
	UpdatedAt            pgtype.Timestamp `json:"updated_at"`
	LastActive           pgtype.Timestamp `json:"last_active"`
	FirstName            pgtype.Text      `json:"first_name"`
	LastName             pgtype.Text      `json:"last_name"`
	PasswordHash         pgtype.Text      `json:"password_hash"`
	Provider             pgtype.Text      `json:"provider"`
	ProviderToken        pgtype.Text      `json:"provider_token"`
	ProviderRefreshToken pgtype.Text      `json:"provider_refresh_token"`
	ProviderLastRefresh  pgtype.Timestamp `json:"provider_last_refresh"`
	Picture              pgtype.Text      `json:"picture"`
	Disabled             bool             `json:"disabled"`
	IsArchived           bool             `json:"is_archived"`
	ArchivedAt           pgtype.Timestamp `json:"archived_at"`
	ArchivedBy           pgtype.Text      `json:"archived_by"`
}

type Chef struct {
	ID                  string           `json:"id"`
	AccountID           string           `json:"account_id"`
	DisplayName         pgtype.Text      `json:"display_name"`
	Description         string           `json:"description"`
	Picture             string           `json:"picture"`
	PhoneNumber         string           `json:"phone_number"`
	ChefStatus          string           `json:"chef_status"`
	CreatedAt           pgtype.Timestamp `json:"created_at"`
	UpdatedAt           pgtype.Timestamp `json:"updated_at"`
	ArchivedAt          pgtype.Timestamp `json:"archived_at"`
	ArchivedBy          pgtype.Text      `json:"archived_by"`
	SocialLinkInstagram pgtype.Text      `json:"social_link_instagram"`
	SocialLinkFacebook  pgtype.Text      `json:"social_link_facebook"`
	SocialLinkWebsite   pgtype.Text      `json:"social_link_website"`
	SocialLinkX         pgtype.Text      `json:"social_link_x"`
	SocialLinkTiktok    pgtype.Text      `json:"social_link_tiktok"`
	SocialLinkYoutube   pgtype.Text      `json:"social_link_youtube"`
}

type ChefProfileReview struct {
	ID                string           `json:"id"`
	ChefID            string           `json:"chef_id"`
	CreatedBy         string           `json:"created_by"`
	CreatedAt         pgtype.Timestamp `json:"created_at"`
	ReviewedAt        pgtype.Timestamp `json:"reviewed_at"`
	Reviewer          pgtype.Text      `json:"reviewer"`
	ReviewPrivateNote pgtype.Text      `json:"review_private_note"`
	ReviewPublicNote  pgtype.Text      `json:"review_public_note"`
	ReviewOutcome     string           `json:"review_outcome"`
}

type Collection struct {
}

type FeaturedChef struct {
}

type Invoice struct {
}

type Pocket struct {
	ID         string           `json:"id"`
	Name       string           `json:"name"`
	AccountID  string           `json:"account_id"`
	IsArchived bool             `json:"is_archived"`
	CreatedAt  pgtype.Timestamp `json:"created_at"`
	UpdatedAt  pgtype.Timestamp `json:"updated_at"`
}

type PocketRecipe struct {
}

type Recipe struct {
	ID          string           `json:"id"`
	ChefID      string           `json:"chef_id"`
	CoverImgID  string           `json:"cover_img_id"`
	Content     []byte           `json:"content"`
	Tags        []string         `json:"tags"`
	IsPublished bool             `json:"is_published"`
	IsHidden    bool             `json:"is_hidden"`
	CreatedAt   pgtype.Timestamp `json:"created_at"`
	UpdatedAt   pgtype.Timestamp `json:"updated_at"`
}

type Session struct {
	ID            string           `json:"id"`
	TokenHash     string           `json:"token_hash"`
	AccountID     string           `json:"account_id"`
	CreatedAt     pgtype.Timestamp `json:"created_at"`
	UpdatedAt     pgtype.Timestamp `json:"updated_at"`
	ExpiresAt     pgtype.Timestamp `json:"expires_at"`
	Invalidated   bool             `json:"invalidated"`
	InvalidatedAt pgtype.Timestamp `json:"invalidated_at"`
	InvalidatedBy pgtype.Text      `json:"invalidated_by"`
}

type Subscription struct {
}

type SubscriptionPlan struct {
}
